#!/usr/bin/env bash

set -ex

csv_file="$1"
annotation_file="$2"
PRODUCT_VERSION="1.0.0"
X_VERSION="1"
Y_VERSION="0"
Z_VERSION="0"
CSV_REPLACES_VERSION="0.4.1"

if [[ -z "$REGISTRY" ]]; then
    echo "Must provide REGISTRY in environment" 1>&2
    exit 1
fi

# Trigger snapshot
# Add openshift specific annotations to CSV file
# https://docs.openshift.com/container-platform/4.14/operators/operator_sdk/osdk-generating-csvs.html#osdk-csv-annotations-infra_osdk-generating-csvs
yq -i '.metadata.annotations += {"features.operators.openshift.io/disconnected": "true"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/fips-compliant": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/proxy-aware": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/tls-profiles": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/token-auth-aws": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/token-auth-azure": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/token-auth-gcp": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/cnf": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/cni": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"features.operators.openshift.io/csi": "false"}' "$csv_file"
yq -i '.metadata.annotations += {"support": "Cluster Observability (https://issues.redhat.com/projects/COO/)"}' "$csv_file"
yq -i '.metadata.annotations += {"operators.openshift.io/valid-subscription": "[\"OpenShift Kubernetes Engine\", \"OpenShift Container Platform\", \"OpenShift Platform Plus\"]"}' "$csv_file"
yq -i '.metadata.labels += {"operatorframework.io/arch.amd64": "supported"}' "$csv_file"
yq -i '.metadata.labels += {"operatorframework.io/arch.arm64": "supported"}' "$csv_file"
yq -i '.metadata.labels += {"operatorframework.io/arch.ppc64le": "supported"}' "$csv_file"
yq -i '.metadata.labels += {"operatorframework.io/arch.s390x": "supported"}' "$csv_file"

COO_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/cluster-observability-operator-container@sha256:fac23f65411ad20a935ac99e7720b360511f72c0391b0be29110d9bebfd31e57"

COO_CONF_RELOADER_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/obo-prometheus-operator-prometheus-config-reloader@sha256:a81946c789cc5ebb767b53fc831b6d1b7e03f5d12036b234de0ccd56cc188949"

COO_ALERTMANAGER_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/alertmanager@sha256:033eb1db7ddc27a45e276c4a0a0d31ee4235b34f7fc1b131ff9b31bfeb0dbb35"

COO_PROMETHEUS_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/prometheus@sha256:38d2e6e18d8c22058505a35efa3387cf507af0e1aeb75f90bf0a069e42ed1d02"

COO_THANOS_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/thanos@sha256:38ddc8a8a7c7ee8c1d1ba8cdf5a0ffa8884cd7083dccd7e800dcd92483f4fde1"

COO_ADMISSION_WEBHOOK_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/obo-prometheus-operator-admission-webhook@sha256:5a6940ac6b3ae958597f9e30c7e884672424367972eae4a63466419caf191843"

COO_PO_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/obo-prometheus-operator@sha256:0952abd9e73c8c1e81c555ad91f9197ece7981f30d93f909fdc69b900c05cbb6"

COO_CONSOLE_DASHBOARDS_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/dashboards-console-plugin-0-3@sha256:16554d0dfc928e24e9259c12eecf25605d1ab17b2ca44316149b06e1a6e01e4e"

COO_CONSOLE_DISTRIBUTED_TRACING_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/distributed-tracing-console-plugin-0-3@sha256:0ed9bf52447133dabf2f63df6f30e957e9d5481dc78603fadbc147454700e698"

COO_CONSOLE_LOGGING_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/logging-console-plugin-6-0@sha256:08a2fa80686a5dbe58fdda1c0e42abd4a1ff1a8bd6efee60a0a706d31c232430"

COO_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/troubleshooting-panel-console-plugin-0-3@sha256:74faf9808b649e6d8351045c06804c066d44d9a3350023f621745d70bd469999"

COO_CONSOLE_MONITORING_PLUGIN_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/monitoring-console-plugin-0-3@sha256:47145db0007979431d153c32e57694cb29c25b4901fdc743e0884cdc12d902d7"

COO_KORREL8R_IMAGE_URL="quay.io/redhat-user-workloads/cluster-observabilit-tenant/korrel8r@sha256:0e47a365dbc0d4890c5ef8ab21a633dc4b87f330b6e6f0b65ce80bcfb11ae881"

if [[ $REGISTRY == "registry.redhat.io"  || $REGISTRY == "registry.stage.redhat.io" ]]; then
    COO_IMAGE_URL="$REGISTRY/cluster-observability-operator/cluster-observability-rhel8-operator@sha256:${COO_IMAGE_URL:(-64)}"
    COO_CONF_RELOADER_IMAGE_URL="$REGISTRY/cluster-observability-operator/obo-prometheus-operator-prometheus-config-reloader-rhel8@sha256:${COO_CONF_RELOADER_IMAGE_URL:(-64)}"
    COO_ALERTMANAGER_IMAGE_URL="$REGISTRY/cluster-observability-operator/alertmanager-rhel8@sha256:${COO_ALERTMANAGER_IMAGE_URL:(-64)}"
    COO_PROMETHEUS_IMAGE_URL="$REGISTRY/cluster-observability-operator/prometheus-rhel8@sha256:${COO_PROMETHEUS_IMAGE_URL:(-64)}"
    COO_THANOS_IMAGE_URL="$REGISTRY/cluster-observability-operator/thanos-rhel8@sha256:${COO_THANOS_IMAGE_URL:(-64)}"
    COO_ADMISSION_WEBHOOK_IMAGE_URL="$REGISTRY/cluster-observability-operator/obo-prometheus-operator-admission-webhook-rhel8@sha256:${COO_ADMISSION_WEBHOOK_IMAGE_URL:(-64)}"
    COO_PO_IMAGE_URL="$REGISTRY/cluster-observability-operator/obo-prometheus-rhel8-operator@sha256:${COO_PO_IMAGE_URL:(-64)}"
    COO_CONSOLE_DASHBOARDS_PLUGIN_IMAGE_URL="$REGISTRY/cluster-observability-operator/dashboards-console-plugin-0-3-rhel9@sha256:${COO_CONSOLE_DASHBOARDS_PLUGIN_IMAGE_URL:(-64)}"
    COO_CONSOLE_DISTRIBUTED_TRACING_PLUGIN_IMAGE_URL="$REGISTRY/cluster-observability-operator/distributed-tracing-console-plugin-0-3-rhel9@sha256:${COO_CONSOLE_DISTRIBUTED_TRACING_PLUGIN_IMAGE_URL:(-64)}"
    COO_CONSOLE_LOGGING_PLUGIN_IMAGE_URL="$REGISTRY/cluster-observability-operator/logging-console-plugin-6-0-rhel9@sha256:${COO_CONSOLE_LOGGING_PLUGIN_IMAGE_URL:(-64)}"
    COO_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN_IMAGE_URL="$REGISTRY/cluster-observability-operator/troubleshooting-panel-console-plugin-0-3-rhel9@sha256:${COO_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN_IMAGE_URL:(-64)}"
    COO_CONSOLE_MONITORING_PLUGIN_IMAGE_URL="$REGISTRY/cluster-observability-operator/monitoring-console-plugin-0-3-rhel9@sha256:${COO_CONSOLE_MONITORING_PLUGIN_IMAGE_URL:(-64)}"
    COO_KORREL8R_IMAGE_URL="$REGISTRY/cluster-observability-operator/korrel8r-rhel8@sha256:${COO_KORREL8R_IMAGE_URL:(-64)}"
fi


# Add related images for disconnected installs
# First we add an empty list
yq -i '(.spec += {"relatedImages": []})' "$csv_file"
VALUE="${COO_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"cluster-observability-operator", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONF_RELOADER_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"prometheus-config-reloader", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_ALERTMANAGER_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"alertmanager", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_PROMETHEUS_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"prometheus", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_THANOS_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"thanos", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_ADMISSION_WEBHOOK_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"prometheus-operator-admission-webhook", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_PO_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"prometheus-operator", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_DASHBOARDS_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-dashboards", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_DISTRIBUTED_TRACING_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-tracing", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_LOGGING_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-logging", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-troubleshooting", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_CONSOLE_MONITORING_PLUGIN_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"ui-monitoring", "image": strenv(VALUE)}])' "$csv_file"
VALUE="${COO_KORREL8R_IMAGE_URL}" yq -i '(.spec.relatedImages += [{"name":"korrel8r", "image": strenv(VALUE)}])' "$csv_file"

# Replace quay.io/rhobs image urls with registry-proxy.engineering.redhat.com/
# urls to get brew builds to pass
sed -i -e "s|quay.io/rhobs/observability-operator.*|${COO_IMAGE_URL}|g" "$csv_file"
sed -i -e "s|quay.io/rhobs/obo-prometheus-operator.*|${COO_PO_IMAGE_URL}|g" "$csv_file"
sed -i -e "s|quay.io/rhobs/obo-admission-webhook.*|${COO_ADMISSION_WEBHOOK_IMAGE_URL}|g" "$csv_file"

# Replace containerImage field with correct image
sed -i -e "s|containerImage:.*|containerImage: ${COO_IMAGE_URL}|g" "$csv_file"

# Replace annotation values used in the upstream bundle for those in the downstream product bundle
sed -i -e "s|operators.operatorframework.io.bundle.package.v1: observability-operator|operators.operatorframework.io.bundle.package.v1: cluster-observability-operator|g" "$annotation_file"

# Replace displayName value used in the upstream bundle so it matches the
# downstream product bundle name
sed -i -e "s|displayName: Observability Operator|displayName: Cluster Observability Operator|g" "$csv_file"
sed -i -e "s|Observability Operator is a Go|Cluster Observability Operator is a Go|g" "$csv_file"

# Replace suggest-namespace annotation if present
sed -i -r "s|operatorframework.io/suggested-namespace: observability-operator|operatorframework.io/suggested-namespace: openshift-cluster-observability-operator|" "$csv_file"

# Replace link value used in the upstream bundle with the downstream name
sed -i -e "s|name: Observability Operator|name: Cluster Observability Operator|g" "$csv_file"

# first add an empty env list to the obo operator container if it doesn't exist
# already
yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator") | select(has("env") | not)) += {"env": []}' "$csv_file"

# add the various images we want to use via an env
# variable. This allows OSBS to massage the pullspec (registry replacement,
# sha pinning)
# We do that by first using sed to replace the relevant image spec with our new
# env var.
# Then we use yq to add the env var value to the containers environment.
sed -i -e 's|--prometheus-config-reloader=.*|"--prometheus-config-reloader=$(RELATED_IMAGE_PROMETHEUS_CONFIG_RELOADER)"|' "$csv_file"
VALUE="${COO_CONF_RELOADER_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "obo-prometheus-operator").spec.template.spec.containers[] | select(.name == "prometheus-operator").env) += [{"name":"RELATED_IMAGE_PROMETHEUS_CONFIG_RELOADER", "value": strenv(VALUE)}]' "$csv_file"

sed -i -e 's|--images=alertmanager=.*|"--images=alertmanager=$(RELATED_IMAGE_ALERTMANAGER)"|' "$csv_file"
VALUE="${COO_ALERTMANAGER_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_ALERTMANAGER", "value": strenv(VALUE)}]' "$csv_file"

sed -i -e 's|--images=prometheus=.*|"--images=prometheus=$(RELATED_IMAGE_PROMETHEUS)"|' "$csv_file"
VALUE="${COO_PROMETHEUS_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_PROMETHEUS", "value": strenv(VALUE)}]' "$csv_file"

sed -i -e 's|--images=thanos=.*|"--images=thanos=$(RELATED_IMAGE_THANOS)"|' "$csv_file"
VALUE="${COO_THANOS_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_THANOS", "value": strenv(VALUE)}]' "$csv_file"

# TODO Once COO-144 is fixed reenable the sed command below and delete lines 150, 153, 156, 159, 162
# sed -i -e 's|--images=ui-dashboards=.*|"--images=ui-dashboards=$(RELATED_IMAGE_CONSOLE_DASHBOARDS_PLUGIN)"|' "$csv_file"
yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-dashboards=$(RELATED_IMAGE_CONSOLE_DASHBOARDS_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_DASHBOARDS_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_DASHBOARDS_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-distributed-tracing=$(RELATED_IMAGE_CONSOLE_DISTRIBUTED_TRACING_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_DISTRIBUTED_TRACING_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_DISTRIBUTED_TRACING_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-logging=$(RELATED_IMAGE_CONSOLE_LOGGING_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_LOGGING_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_LOGGING_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-troubleshooting-panel=$(RELATED_IMAGE_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_TROUBLESHOOTING_PANEL_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=ui-monitoring=$(RELATED_IMAGE_CONSOLE_MONITORING_PLUGIN)"]' "$csv_file"
VALUE="${COO_CONSOLE_MONITORING_PLUGIN_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_CONSOLE_MONITORING_PLUGIN", "value": strenv(VALUE)}]' "$csv_file"

yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) +=  ["--images=korrel8r=$(RELATED_IMAGE_KORREL8R)"]' "$csv_file"
VALUE="${COO_KORREL8R_IMAGE_URL}" yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").env) += [{"name":"RELATED_IMAGE_KORREL8R", "value": strenv(VALUE)}]' "$csv_file"

# set openshift.enabled feature gate
yq -i '(.spec.install.spec.deployments[] | select(.name == "observability-operator").spec.template.spec.containers[] | select(.name == "operator").args) += ["--openshift.enabled=true"]' "$csv_file"

# Set CSV .spec.version to downstream version.
VALUE="${PRODUCT_VERSION}" yq -i '.spec.version = strenv(VALUE)' "${csv_file}"

# Add .olm.skipRange annotation
VALUE=">="${CI_X_VERSION}.${CI_Y_VERSION}.0" <${PRODUCT_VERSION}" yq -i '.metadata.annotations += {"olm.skipRange": strenv(VALUE)}' "${csv_file}"

# Set replaces based upon the version defined from the environment variable or
# calculate it to be the previous z-stream
python3 - << END
replaces = "${CSV_REPLACES_VERSION:-}"
if replaces == "":
  patch = int("${Z_VERSION}") - 1
  if patch > 0:
    replaces = "${X_VERSION}" + "." + "${Y_VERSION}" + "." + str(patch)
if replaces != "":
  import os, yaml
  with open('${csv_file}', 'r') as f:
    y = yaml.safe_load(f) or {}
    y['spec']['replaces'] = "cluster-observability-operator." + replaces
  with open('${csv_file}', 'w') as f:
    yaml.dump(y, f)
END

# Set CSV .metadata.name to downstream version.
VALUE="${PRODUCT_VERSION}" yq -i '.metadata.name = "cluster-observability-operator.v" + strenv(VALUE)' "${csv_file}"

# Set CSV .spec.icon to downstream version.
# Should be the same as in catalog/catalog-template.yaml
VALUE="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyBpZD0idXVpZC1kMWI4NDIzOC0wYzgxLTQ5MjctOGQ4Mi03OTcyN2Y5OGZjYWMiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDM4IDM4Ij4KPHRpdGxlPkNsdXN0ZXIgb2JzZXJ2YWJpbGl0eTwvdGl0bGU+CjxkZXNjPmNsb3VkPC9kZXNjPgo8bWV0YWRhdGE+PD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgOC4wLWMwMDEgMS4wMDAwMDAsIDAwMDAvMDAvMDAtMDA6MDA6MDAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgICAgICAgICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgICAgICAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iPgogICAgICAgICA8IS0tIG1ldGFkYXRhIGZpZWxkcyAtLT4KICAgICAgPC9yZGY6RGVzY3JpcHRpb24+CiAgIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+Cjw/eHBhY2tldCBlbmQ9InciPz48L21ldGFkYXRhPgo8ZGVmcz48c3R5bGU+LnV1aWQtMjRiMGQ5N2ItNjgxZS00ZGE2LWExYzctNzY3MWFlNTc1MzJhe2ZpbGw6I2UwZTBlMDt9LnV1aWQtMjRiMGQ5N2ItNjgxZS00ZGE2LWExYzctNzY3MWFlNTc1MzJhLC51dWlkLTk3YzFlYzg0LTliODEtNDU2ZS05OWFhLTcxMzc1MGViNjllMCwudXVpZC1mMDMyMTc4ZS1iZDUwLTRkZTctYjc3My02NjViZmQ1YzViYjgsLnV1aWQtNGJlZjgyMGItNTZjOS00N2U3LTgyYTMtMmRiOGQ4YzdiMTEye3N0cm9rZS13aWR0aDowcHg7fS51dWlkLTk3YzFlYzg0LTliODEtNDU2ZS05OWFhLTcxMzc1MGViNjllMHtmaWxsOiMwMDA7fS51dWlkLWYwMzIxNzhlLWJkNTAtNGRlNy1iNzczLTY2NWJmZDVjNWJiOHtmaWxsOiNlMDA7fS51dWlkLTRiZWY4MjBiLTU2YzktNDdlNy04MmEzLTJkYjhkOGM3YjExMntmaWxsOiNmZmY7fTwvc3R5bGU+PC9kZWZzPgo8cmVjdCBjbGFzcz0idXVpZC00YmVmODIwYi01NmM5LTQ3ZTctODJhMy0yZGI4ZDhjN2IxMTIiIHg9IjEiIHk9IjEiIHdpZHRoPSIzNiIgaGVpZ2h0PSIzNiIgcng9IjkiIHJ5PSI5Ii8+CjxwYXRoIGNsYXNzPSJ1dWlkLTI0YjBkOTdiLTY4MWUtNGRhNi1hMWM3LTc2NzFhZTU3NTMyYSIgZD0iTTI4LDIuMjVjNC4yNzM0LDAsNy43NSwzLjQ3NjYsNy43NSw3Ljc1djE4YzAsNC4yNzM0LTMuNDc2Niw3Ljc1LTcuNzUsNy43NUgxMGMtNC4yNzM0LDAtNy43NS0zLjQ3NjYtNy43NS03Ljc1VjEwYzAtNC4yNzM0LDMuNDc2Ni03Ljc1LDcuNzUtNy43NWgxOE0yOCwxSDEwQzUuMDI5NCwxLDEsNS4wMjk0LDEsMTB2MThjMCw0Ljk3MDYsNC4wMjk0LDksOSw5aDE4YzQuOTcwNiwwLDktNC4wMjk0LDktOVYxMGMwLTQuOTcwNi00LjAyOTQtOS05LTloMFoiLz4KPHBhdGggY2xhc3M9InV1aWQtZjAzMjE3OGUtYmQ1MC00ZGU3LWI3NzMtNjY1YmZkNWM1YmI4IiBkPSJNMjEuMzc1LDE5YzAsLjM0NTIuMjgwMy42MjUuNjI1LjYyNXMuNjI1LS4yNzk4LjYyNS0uNjI1YzAtMS45OTktMS42MjYtMy42MjUtMy42MjUtMy42MjUtLjM0NDcsMC0uNjI1LjI3OTgtLjYyNS42MjVzLjI4MDMuNjI1LjYyNS42MjVjMS4zMDk2LDAsMi4zNzUsMS4wNjU0LDIuMzc1LDIuMzc1WiIvPgo8cGF0aCBjbGFzcz0idXVpZC1mMDMyMTc4ZS1iZDUwLTRkZTctYjc3My02NjViZmQ1YzViYjgiIGQ9Ik0xOSwxMy4zNzVjLS43ODIyLDAtMS41MzkxLjE1NzctMi4yNS40NjgzLS4zMTY0LjEzODItLjQ2MDkuNTA2OC0uMzIyMy44MjMyLjEzNzcuMzE2NC41MDc4LjQ1ODUuODIyMy4zMjIzLjU1MjctLjI0MTIsMS4xNDE2LS4zNjM4LDEuNzUtLjM2MzgsMi40MTIxLDAsNC4zNzUsMS45NjI0LDQuMzc1LDQuMzc1cy0xLjk2MjksNC4zNzUtNC4zNzUsNC4zNzUtNC4zNzUtMS45NjI0LTQuMzc1LTQuMzc1YzAtLjYwODkuMTIyMS0xLjE5NzMuMzYzMy0xLjc0OTUuMTM4Ny0uMzE2NC0uMDA1OS0uNjg1MS0uMzIyMy0uODIzMi0uMzE0NS0uMTM5Mi0uNjgzNi4wMDU0LS44MjIzLjMyMjMtLjMxMTUuNzExNC0uNDY4OCwxLjQ2ODMtLjQ2ODgsMi4yNTA1LDAsMy4xMDE2LDIuNTIzNCw1LjYyNSw1LjYyNSw1LjYyNXM1LjYyNS0yLjUyMzQsNS42MjUtNS42MjUtMi41MjM0LTUuNjI1LTUuNjI1LTUuNjI1WiIvPgo8cGF0aCBjbGFzcz0idXVpZC05N2MxZWM4NC05YjgxLTQ1NmUtOTlhYS03MTM3NTBlYjY5ZTAiIGQ9Ik0zMC40NjY4LDE4LjczODhjLTIuMDU2Ni00LjQ3MzEtNi41NTc2LTcuMzYzOC0xMS40NjY4LTcuMzYzOHMtOS40MTAyLDIuODkwNi0xMS40NjY4LDcuMzYzOGMtLjA3NTIuMTY2LS4wNzUyLjM1NjQsMCwuNTIyNSwyLjA1NjYsNC40NzMxLDYuNTU3Niw3LjM2MzgsMTEuNDY2OCw3LjM2MzhzOS40MTAyLTIuODkwNiwxMS40NjY4LTcuMzYzOGMuMDc1Mi0uMTY2LjA3NTItLjM1NjQsMC0uNTIyNVpNMTksMjUuMzc1Yy00LjMyNjIsMC04LjMwMDgtMi40OTI3LTEwLjIwNjEtNi4zNzUsMS45MDUzLTMuODgyMyw1Ljg3OTktNi4zNzUsMTAuMjA2MS02LjM3NXM4LjMwMDgsMi40OTI3LDEwLjIwNjEsNi4zNzVjLTEuOTA1MywzLjg4MjMtNS44Nzk5LDYuMzc1LTEwLjIwNjEsNi4zNzVaIi8+CjxwYXRoIGNsYXNzPSJ1dWlkLTk3YzFlYzg0LTliODEtNDU2ZS05OWFhLTcxMzc1MGViNjllMCIgZD0iTTE1LjQ0MjQsMTQuNTU4MWMtLjI0NDEtLjI0NDEtLjY0MDYtLjI0NDEtLjg4NDgsMC0uMjQzMi4yNDQxLS4yNDMyLjYzOTYsMCwuODgzOGw0LDRjLjEyMjEuMTIyMS4yODIyLjE4MzEuNDQyNC4xODMxcy4zMjAzLS4wNjEuNDQyNC0uMTgzMWMuMjQzMi0uMjQ0MS4yNDMyLS42Mzk2LDAtLjg4MzhsLTQtNFoiLz4KPC9zdmc+Cg==" yq -i '.spec.icon[0].base64data=strenv(VALUE)' "${csv_file}"

# TODO jan temp workaround until we have obo bundle creation fixed
sed -i -e "s|image: observability-operator.*|image: ${COO_IMAGE_URL}|g" "$csv_file"
sed -i -e "s|containerImage: observability-operator.*|containerImage: ${COO_IMAGE_URL}|g" "$csv_file"
